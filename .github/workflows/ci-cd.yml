name: CI/CD Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:14
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: mydb
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U user" 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5

    steps:
      # 1. Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Set up Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # 3. Install and build Frontend
      - name: Install and build Frontend
        working-directory: ./frontend
        run: |
          npm install
          npm run build

      # 4. Install and build Backend
      - name: Install and build Backend
        working-directory: ./backend
        run: |
          npm install
          npm run build

      # 5. Run Frontend Tests
      - name: Run Frontend Tests
        working-directory: ./frontend
        run: |
          npm run test

      # 6. Run Backend Tests
      - name: Run Backend Tests
        working-directory: ./backend
        run: |
          npm run test

  deploy:
    name: Deploy to Production
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to Server
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_KEY }}
          script: |
            cd /path/to/your/project
            docker-compose down
            git pull origin main
            docker-compose up --build -d
